include ../config.mk
PACKAGES = openal-soft ogg vorbis alure zlib physfs lua lua-cjson glfw bullet
GENERATED = $(PACKAGES)

HERE = $(shell pwd)
ROOT = $(shell cd .. && pwd)

CMAKE_ARGS  = "-DCMAKE_SYSTEM_NAME=$(TARGET)"
CMAKE_ARGS += "-DCMAKE_C_COMPILER=$(CC)"
CMAKE_ARGS += "-DCMAKE_CXX_COMPILER=$(CXX)"
CMAKE_ARGS += "-DCMAKE_RC_COMPILER=$(WINDRES)"
CMAKE_ARGS += "-DCMAKE_C_FLAGS=$(CFLAGS)"
CMAKE_ARGS += "-DCMAKE_CXX_FLAGS=$(CXXFLAGS)"
CMAKE_ARGS += "-DCMAKE_FIND_ROOT_PATH=$(ROOT_PATH)"
CMAKE_ARGS += "-DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER"
CMAKE_ARGS += "-DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY"
CMAKE_ARGS += "-DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY"
CMAKE_ARGS += "-DCMAKE_BUILD_TYPE=Release"

AUTOTOOLS_ARGS  = "CC=$(CC)"
AUTOTOOLS_ARGS += "CXX=$(CXX)"
AUTOTOOLS_ARGS += "CPP=$(CPP)"
AUTOTOOLS_ARGS += "CFLAGS=$(CFLAGS)"
AUTOTOOLS_ARGS += "CXXFLAGS=$(CXXFLAGS)"
AUTOTOOLS_ARGS += "--with-sysroot=$(ROOT_PATH)"
AUTOTOOLS_ARGS += "--host=$(AUTOTOOLS_HOST)"
AUTOTOOLS_ARGS += "--disable-shared"

all: .gitignore $(PACKAGES)

clean:
	rm -f .gitignore
	rm -fr $(PACKAGES)

.PHONY: all clean

.gitignore:
	echo '# FILE IS GENERATED BY MAKE - DO NOT EDIT' > $@
	for file in $(GENERATED) ; do \
		echo /$$file >> $@ ; \
	done

define get-src =
	cd $(ROOT)/src && $(MAKE) $@
endef

define build-cmake =
	$(get-src)
	rm -rf $@
	mkdir $@
	cd $@ && cmake $(ROOT)/src/$@ $(CMAKE_ARGS) -C$(HERE)/$@.cmake
	cd $@ && $(MAKE)
endef

define build-autotools =
	$(get-src)
	rm -rf $@
	cp -R $(ROOT)/src/$@ $@
	cd $@ && ./configure $(AUTOTOOLS_ARGS)
	cd $@ && $(MAKE)
endef

openal-soft:
	$(build-cmake)

ogg:
	$(build-autotools)

vorbis: AUTOTOOLS_ARGS += "OGG_CFLAGS=-I$(HERE)/ogg/include"
vorbis: AUTOTOOLS_ARGS += "OGG_LIBS=-L$(HERE)/ogg/src/.libs"
vorbis: ogg
	$(build-autotools)

alure: openal-soft vorbis
	$(build-cmake)

zlib:
	$(build-cmake)

physfs: zlib
	$(build-cmake)

lua:
	$(get-src)
	rm -rf $@
	cp -R $(ROOT)/src/$@ $@
	cd $@ && $(MAKE) PLAT=generic \
					 "CC=$(CC)" \
					 "CFLAGS=$(CFLAGS)" \
					 "LDFLAGS=$(LDFLAGS)" \
					 "AR=$(AR) rcu" \
					 "RANLIB=$(RANLIB)"

lua-cjson:
	$(build-cmake)

glfw:
	$(build-cmake)

bullet:
	$(build-cmake)
